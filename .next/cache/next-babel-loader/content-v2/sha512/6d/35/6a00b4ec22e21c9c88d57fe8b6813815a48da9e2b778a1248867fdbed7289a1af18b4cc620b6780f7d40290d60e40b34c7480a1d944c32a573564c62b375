{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/choi/Desktop/react-next-erp/store/configureStore.js"],"names":["createWrapper","applyMiddleware","combineReducers","compose","createStore","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAAuE,OAAvE;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAG,QACbN,OAAO,CAACF,eAAe,CAAC,GAAGO,WAAJ,CAAhB,CADM,GAEbH,mBAAmB,CAACJ,eAAe,CAAC,GAAGO,WAAJ,CAAhB,CAFvB;AAGA,QAAME,KAAK,GAAGN,WAAW,CAACE,OAAD,EAAUG,QAAV,CAAzB;AACA,SAAOC,KAAP;AACD,CAPD;;AASA,MAAMC,OAAO,GAAGX,aAAa,CAACO,cAAD,EAAiB;AAAEK,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAGA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\r\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport reducer from '../reducers';\r\n\r\nconst configureStore = () => {\r\n  const middlewares = [];\r\n  const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(applyMiddleware(...middlewares))\r\n  const store = createStore(reducer, enhancer);\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}