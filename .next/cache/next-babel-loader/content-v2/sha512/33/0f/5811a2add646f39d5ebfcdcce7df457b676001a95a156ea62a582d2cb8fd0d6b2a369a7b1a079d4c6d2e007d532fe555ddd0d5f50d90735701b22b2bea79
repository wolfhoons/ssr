{"ast":null,"code":"import _defineProperty from \"C:/Users/choi/Desktop/react-next-erp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAIL } from '../reducers/user';\nvar initialState = {\n  user: {}\n};\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user: user\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/choi/Desktop/react-next-erp/reducers/index.js"],"names":["HYDRATE","combineReducers","user","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAIL","initialState","rootReducer","index","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,WAAzC,QAA4D,kBAA5D;AAEA,IAAMC,YAAY,GAAG;AACnBJ,EAAAA,IAAI,EAAE;AADa,CAArB;AAMA,IAAMK,WAAW,GAAGN,eAAe,CAAE;AACnCO,EAAAA,KAAK,EAAE,iBAAwB;AAAA,QAAvBC,KAAuB,uEAAf,EAAe;AAAA,QAAXC,MAAW;;AAC7B,YAAQA,MAAM,CAACC,IAAf;AACE,WAAKX,OAAL;AACEY,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,+CAAYD,KAAZ,GAAsBC,MAAM,CAACI,OAA7B;;AACF;AACE,eAAOL,KAAP;AALJ;AAOD,GATkC;AAUnCP,EAAAA,IAAI,EAAJA;AAVmC,CAAF,CAAnC;AAaA,eAAeK,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\nimport { combineReducers } from 'redux';\r\nimport user from './user';\r\n\r\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAIL } from '../reducers/user';\r\n\r\nconst initialState = {\r\n  user: {\r\n\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers ({\r\n  index: (state = {}, action) => {\r\n    switch (action.type) {\r\n      case HYDRATE:\r\n        console.log('HYDRATE', action);\r\n        return { ...state, ...action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  user,\r\n});\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}