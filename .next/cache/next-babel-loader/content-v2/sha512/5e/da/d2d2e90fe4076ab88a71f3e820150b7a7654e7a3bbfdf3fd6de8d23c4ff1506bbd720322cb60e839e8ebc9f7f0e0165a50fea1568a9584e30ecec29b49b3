{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggedIn: false,\n  user: null\n};\nexport const loginAction = data => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        user: action.data\n      });\n\n    case 'LOG_IN_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        user: action.data\n      });\n\n    case 'LOG_IN_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        user: action.data\n      });\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/choi/Desktop/react-next-erp/reducers/user.js"],"names":["initialState","isLoggedIn","user","loginAction","data","type","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB;AAKP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAE,gBADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;;AAOP,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAK,gBAAL;AACE,6CACKE,KADL;AAEEN,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,IAAI,EAAEM,MAAM,CAACJ;AAHf;;AAKF,SAAK,gBAAL;AACE,6CACKG,KADL;AAEEN,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,IAAI,EAAEM,MAAM,CAACJ;AAHf;;AAKF,SAAK,gBAAL;AACE,6CACKG,KADL;AAEEN,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,IAAI,EAAEM,MAAM,CAACJ;AAHf;;AAKF;AACE,aAAOG,KAAP;AApBJ;;AAqBC;AACF,CAvBD;;AAyBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    isLoggedIn: false,\r\n    user: null,\r\n}\r\n\r\nexport const loginAction = (data) => {\r\n  return {\r\n    type: 'LOG_IN_REQUEST',\r\n    data,\r\n  }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN_REQUEST':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: action.data,\r\n      }\r\n    case 'LOG_IN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: action.data,\r\n      }\r\n    case 'LOG_IN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: action.data,\r\n      }\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}