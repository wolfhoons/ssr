{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, takeLatest, put, delay } from 'redux-saga/effects'; // call 동기, fork 비동기,\n\nfunction logInAPI() {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log('saga login', action); // const result = yield call(logInAPI, action.data);\n\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      //data: result.data\n      data: action.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: 'LOG_IN_FAIL',\n      error: e.response.data\n    });\n  }\n} // takeLatest 마지막 건만 실행한다. 여러번 클릭 시\n\n\nfunction* watchLogin() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin)]);\n}","map":{"version":3,"sources":["C:/Users/choi/Desktop/react-next-erp/sagas/user.js"],"names":["axios","all","fork","takeLatest","put","delay","logInAPI","post","data","logIn","action","console","log","type","e","error","response","watchLogin","userSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,QAAkD,oBAAlD,C,CAEA;;AAEA,SAASC,QAAT,GAAoB;AAClB,SAAON,KAAK,CAACO,IAAN,CAAW,YAAX,EAAyBC,IAAzB,CAAP;AACD;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,MAA1B,EADE,CAEF;;AACA,UAAML,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,gBADE;AAEV;AACEL,MAAAA,IAAI,EAAEE,MAAM,CAACF;AAHL,KAAD,CAAT;AAKD,GATD,CASE,OAAOM,CAAP,EAAU;AACVH,IAAAA,OAAO,CAACI,KAAR,CAAcD,CAAd;AACA,UAAMV,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,aADE;AAERE,MAAAA,KAAK,EAAED,CAAC,CAACE,QAAF,CAAWR;AAFV,KAAD,CAAT;AAID;AACF,C,CAED;;;AACA,UAAUS,UAAV,GAAuB;AACrB,QAAMd,UAAU,CAAC,gBAAD,EAAmBM,KAAnB,CAAhB;AACD;;AAED,eAAe,UAAUS,QAAV,GAAqB;AAClC,QAAMjB,GAAG,CAAC,CACRC,IAAI,CAACe,UAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import axios from 'axios';\r\nimport { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\r\n\r\n// call 동기, fork 비동기,\r\n\r\nfunction logInAPI() {\r\n  return axios.post('/api/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    console.log('saga login', action);\r\n    // const result = yield call(logInAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: 'LOG_IN_SUCCESS',\r\n    //data: result.data\r\n      data: action.data\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: 'LOG_IN_FAIL',\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// takeLatest 마지막 건만 실행한다. 여러번 클릭 시\r\nfunction* watchLogin() {\r\n  yield takeLatest('LOG_IN_REQUEST', logIn);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin)\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}