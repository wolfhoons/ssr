{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null\n  }\n};\nconst changeNickname = {\n  type: 'CHANGE_NICKNAME',\n  data: '바꾼다'\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/choi/Desktop/react-next-erp/reducers/index.js"],"names":["initialState","user","isLoggedIn","changeNickname","type","data","rootReducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,KADR;AAEJD,IAAAA,IAAI,EAAE;AAFF;AADa,CAArB;AAOA,MAAME,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAE,iBADe;AAErBC,EAAAA,IAAI,EAAE;AAFe,CAAvB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,QAAL;AACE,6CACKG,KADL;AAEEN,QAAAA,IAAI,kCACCM,KAAK,CAACN,IADP;AAEFC,UAAAA,UAAU,EAAE,IAFV;AAGFD,UAAAA,IAAI,EAAEO,MAAM,CAACH;AAHX;AAFN;;AAQF;AACE,aAAOE,KAAP;AAXJ;AAcD,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["const initialState = {\r\n  user: {\r\n    isLoggedIn: false,\r\n    user: null,\r\n  }\r\n}\r\n\r\nconst changeNickname = {\r\n  type: 'CHANGE_NICKNAME',\r\n  data: '바꾼다'\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN':\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          isLoggedIn: true,\r\n          user: action.data,\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}